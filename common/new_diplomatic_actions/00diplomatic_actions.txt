# Triggers and effects will be given the Actor's scope, with the Recipient's as FROM
# Create new diplomatic actions like this. AI will currently never send them.
#demand_dummy = {
#	category = influence
#
#	alert_index = 40
#	alert_tooltip = demand_dummy_alert_tooltip
#
#	require_acceptance = yes # Whether the recipient gets an option to decline
#
#	is_visible = {
#		always = no ############################ Remove this line to unleash the magic ########################################
#		religion_group = christian
#		is_subject = no
#		FROM = {
#			is_subject = no
#		}
#	}
#	is_allowed = {
#		variable_arithmetic_trigger = {
#			custom_tooltip = HAS_OLDER_RULER_THAN_THEIR_HEIR
#			export_to_variable = { # All export to variable will happen first. Then the other effects and triggers will be executed/evaluated in order
#				variable_name = my_age
#				value = trigger_value:ruler_age
#			}
#			export_to_variable = {
#				variable_name = their_age
#				value = trigger_value:heir_age
#				who = FROM
#			}
#			ruler_age = 0 # This is a normal trigger.
#			FROM = {
#				heir_age = 0 # This is a normal trigger too.
#			}
#			check_variable = { # This trigger is only allowed inside a variable_arithmetic_trigger.
#				which = my_age
#				which = their_age
#			}
#		}
#		religion = catholic
#	}
#	on_accept = {
#		add_trust = {
#			who = FROM
#			value = 20
#			mutual = yes
#		}
#		create_subject = {
#			subject_type = dummy
#			subject = FROM
#		}
#	}
#	on_decline =
#	{
#		add_trust = {
#			who = FROM
#			value = -100
#			mutual = no
#		}
#	}
#
#	ai_acceptance = { # This works similarly to variable_arithmetic_trigger, but does not support triggers generally. Instead, "limit" will be evaluated first and the rest ignored if it isn't passed.
#		add_entry = {
#			name = TRUST
#			limit = { religion = catholic }
#			export_to_variable = {
#				variable_name = ai_value # Each "add_entry" must create one variable called "ai_value", the value of which will be extracted after executing all effects
#				value = trust
#				who = FROM
#				with = THIS
#			}
#			subtract_variable = { which = ai_value value = 50 }
#			multiply_variable = { which = ai_value value = 2 }
#		}
#		add_entry = {
#			name = TRUST
#			limit = { NOT = { religion = catholic } }
#			export_to_variable = {
#				variable_name = ai_value
#				value = trust
#				who = FROM
#				with = THIS
#			}
#			export_to_variable = {
#				variable_name = is_defender
#				value = trigger_value:is_defender_of_faith # This sets is_defender to either 0.0 or 1.0
#			}
#			multiply_variable = {
#				which = is_defender
#				value = 10
#			}
#			change_variable = {
#				which = ai_value
#				which = is_defender # This adds 10 to ai_value if you are defender of faith
#			}
#			subtract_variable = { which = ai_value value = 50 }
#		}
#		add_entry = {
#			name = OPINION
#			export_to_variable = {
#				variable_name = ai_value
#				value = opinion
#				who = FROM
#				with = THIS
#			}
#			divide_variable = { which = ai_value value = 4 }
#		}
#	}
#
#	ai_will_do = { # this is a trigger
#		has_opinion_modifier = {
#			modifier = insulted
#			who = FROM
#		}
#	}
#}
#
#cancel_dummy =  {
#	category = influence
#	require_acceptance = no
#	is_visible = {
#		overlord_of = FROM
#		FROM = {
#			is_subject_of_type = dummy
#		}
#	}
#	is_allowed = {
#		reverse_has_opinion_modifier = {
#			modifier = insulted
#			who = FROM
#		}
#	}
#	on_accept = {
#		add_trust = {
#			who = FROM
#			value = -100
#			mutual = yes
#		}
#		FROM = {
#			grant_independence = yes
#		}
#	}
#	ai_will_do = {
#		always = no
#	}
#}

offer_contract_addition = {
	category = influence

	alert_index = 40
	alert_tooltip = demand_dummy_alert_tooltip

	require_acceptance = yes # Whether the recipient gets an option to decline

	is_visible = {
		has_government_mechanic = nalean_contract_mechanic
		is_subject = no
		FROM = {
			is_subject = no
			same_continent = ROOT
			#is_neighbor_of = ROOT
		}
	}
	is_allowed = {
		custom_trigger_tooltip = {
			tooltip = KYA_NC_normal_vassal_conditions
			alliance_with = FROM
			FROM={
				has_opinion = {
					who = ROOT
					value = 190
				}
				is_at_war = no
			}
			has_government_power = {
				mechanic_type = nalean_contract_mechanic
				power_type = contract_experation
				value = 30
			}
		}
		
	}
	on_accept = {
		add_trust = {
			who = FROM
			value = 10
			mutual = yes
		}
		create_subject = {
			subject_type = feudal_dignitary
			subject = FROM
		}
		add_government_power = { # adds the specified amount of power
			mechanic_type = nalean_contract_mechanic
			power_type = contract_experation
			value = -25
		}
	}
	on_decline ={
		add_trust = {
			who = FROM
			value = -15
			mutual = no
		}
	}

	ai_acceptance = { # This works similarly to variable_arithmetic_trigger, but does not support triggers generally. Instead, "limit" will be evaluated first and the rest ignored if it isn't passed.
		add_entry = {
			name = TRUST
			export_to_variable = {
				variable_name = ai_value # Each "add_entry" must create one variable called "ai_value", the value of which will be extracted after executing all effects
				value = trust
				who = FROM
				with = THIS
			}
			subtract_variable = { which = ai_value value = 50 }
			multiply_variable = { which = ai_value value = 2 }
		}
		#vassalization acceptance reasons modifier
		add_entry = {
			name = NCvassalizationreasons
			limit = {always = yes}
			export_to_variable = {
				which = ai_value
				value = modifier:accept_vassalization_reasons
				who = ROOT
			}

		}
		#ruler diplo skill
		add_entry = {
			name = NCRulerDip
			limit = {dip = 3}
			export_to_variable = {
				which = ai_value
				value = DIP
				who = ROOT
			}
			multiply_variable = { which = ai_value value = 2 }

		}
		#diplomatic repuation
		add_entry = {
			name = NCdipRep
			limit = {always = yes}
			export_to_variable = {
				which = ai_value
				value = modifier:diplomatic_reputation
				who = ROOT
			}
			multiply_variable = { which = ai_value value = 2 }

		}
		#development comparision
		add_entry = {
			name = NCSize
			limit = {
				always = yes
			}
			export_to_variable = {
				which = ai_value
				value = total_development
				who = ROOT
			}
			divide_variable = { which = ai_value value = 3.5 }
			export_to_variable = {
				which = from_value
				value = total_development
				who = FROM
			}
			multiply_variable = { which = from_value value = -1 }
			change_variable = {
				which = ai_value
				which = from_value
			}
		}
		add_entry = {
			name = NCTooBig
			limit = {
				FROM = {total_development = 100}
			}
			export_to_variable = {
				which = ai_value
				value = trigger_value:always
			}
			set_variable = {
				ai_value = -1000
			}
		}
		add_entry = {
			name = NCSmallDistance
			limit = {
				FROM = {
					capital_distance = {
						who = ROOT
						distance = 100
					}
					NOT={
						capital_distance = {
							who = ROOT
							distance = 150
						}
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = trigger_value:always
			}
			set_variable = {
				ai_value = -10
			}
		}
		add_entry = {
			name = NCOutsideKyathia
			limit = {
				FROM = {
					capital_distance = {
						who = ROOT
						distance = 150
					}
					NOT={
						capital_distance = {
							who = ROOT
							distance = 200
						}
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = trigger_value:always
			}
			set_variable = {
				ai_value = -35
			}
		}
		add_entry = {
			name = NCVeryFar
			limit = {
				FROM = {
					capital_distance = {
						who = ROOT
						distance = 200
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = trigger_value:always
			}
			set_variable = {
				ai_value = -100
			}
		}
		#high prestige
		add_entry = {
			name = NCPrestigeous
			limit = {
				ROOT = {prestige = 50}
			}
			export_to_variable = {
				which = ai_value
				value = prestige
			}
			divide_variable = { which = ai_value value = 4 }
		}
		#power projection
		add_entry = {
			name = NCAssertive
			limit = {
				ROOT = {power_projection = 50}
			}
			export_to_variable = {
				which = ai_value
				value = trigger_value:always
			}
			set_variable = {
				ai_value = 15
			}
		}
		#your army is a good ammount larger than theirs
		add_entry = {
			name = NCPowerful
			limit = {
				ROOT = {
					army_strength = {
					who = FROM
					value = 1.5
					}
				}
			}
			export_to_variable = {
				which = ai_value
				value = trigger_value:always
			}
			set_variable = {
				ai_value = 15
			}
		}
		#your army is too small
		add_entry = {
			name = NCWeak
			limit = {
				ROOT = {
					NOT = {
						army_strength = {
							who = FROM
							value = 0.6
						}
					}
					
				}
			}
			export_to_variable = {
				which = ai_value
				value = trigger_value:always
			}
			set_variable = {
				ai_value = -45
			}
		}
		#base -45
		add_entry = {
			name = NCBase
			limit = {
				always = yes
			}
			export_to_variable = {
				which = ai_value
				value = trigger_value:always
			}
			set_variable = {
				ai_value = -45
			}
			
		}
		#has subjects
		add_entry = {
			name = NCOverlord
			limit = {
				FROM={
					num_of_subjects = 1
				}
			}
			export_to_variable = {
				which = ai_value
				value = trigger_value:always
			}
			set_variable = {
				ai_value = -50
			}
			
		}
	}

	ai_will_do = { # this is a trigger
		has_opinion_modifier = {
			modifier = insulted
			who = FROM
		}
	}
}
call_feudal_dignitary_defence = {
	category = alliance

	alert_index = 40
	alert_tooltip = demand_dummy_alert_tooltip

	require_acceptance = yes # Whether the recipient gets an option to decline

	is_visible = {
		FROM = {
			is_subject_of = ROOT
			is_subject_of_type = feudal_dignitary
		}
		is_in_war = {
			defenders = ROOT
		}
	}
	is_allowed = {
		FROM={
			has_opinion = {
				who = ROOT
				value = 0
			}
			is_at_war = no
			NOT={liberty_desire = 50}
		}
	}
	on_accept = {
		FROM={
			join_all_defensive_wars_of = ROOT
		}
	}
	on_decline ={
		add_trust = {
			who = FROM
			value = -15
			mutual = no
		}
	}

	ai_acceptance = { # This works similarly to variable_arithmetic_trigger, but does not support triggers generally. Instead, "limit" will be evaluated first and the rest ignored if it isn't passed.
		add_entry = {
			name = TRUST
			export_to_variable = {
				variable_name = ai_value # Each "add_entry" must create one variable called "ai_value", the value of which will be extracted after executing all effects
				value = trust
				who = FROM
				with = THIS
			}
			subtract_variable = { which = ai_value value = 50 }
			multiply_variable = { which = ai_value value = 2 }
		}
		#vassalization acceptance reasons modifier
		#ruler diplo skill
		add_entry = {
			name = NCRulerDip
			limit = {dip = 3}
			export_to_variable = {
				which = ai_value
				value = DIP
				who = ROOT
			}
			multiply_variable = { which = ai_value value = 2 }

		}
		#diplomatic repuation
		add_entry = {
			name = NCdipRep
			limit = {always = yes}
			export_to_variable = {
				which = ai_value
				value = modifier:diplomatic_reputation
				who = ROOT
			}
			multiply_variable = { which = ai_value value = 2 }

		}
		add_entry = {
            name = DIPLO_OPPINION
			export_to_variable = {
				variable_name = ai_value
				value = opinion
				who = FROM
				with = ROOT
			}
			multiply_variable = {
				which = ai_value 
				value = 0.125
			}
        }
		add_entry = {
			name = AI_TRUST_TOWARDS_ROOT
			export_to_variable = {
				variable_name = ai_value
				value = trust
				who = FROM
				with = ROOT
			}			
			subtract_variable = { 
				which = ai_value
				value = 50
			}
			#1 trust = +4 ai points
			multiply_variable = {
				which = ai_value
				value = 0.4
			}
		}
		#base -45
		add_entry = {
			name = NCBase
			limit = {
				always = yes
			}
			export_to_variable = {
				which = ai_value
				value = trigger_value:always
			}
			set_variable = {
				ai_value = -45
			}
			
		}
	}

	ai_will_do = { # this is a trigger
		has_opinion_modifier = {
			modifier = insulted
			who = FROM
		}
	}
}

# Sphere of Cultural Influence
invite_into_cultural_sphere_of_influence = {
	category = influence
	require_acceptance = yes

	alert_index = 60
	alert_tooltip = invite_into_cultural_sphere_of_influence_alert_tooltip

	is_visible = {
		OR={
			has_active_policy = philosophical_influence
			has_idea = full_leverage
		}
		is_subject = no
		FROM = { is_subject = no }
	}
	is_allowed = {
		if = {
			limit = {
				NOT = {
					FROM = {
						capital_scope = {
							trade_range = ROOT
						}
					}
				}
			}
			custom_trigger_tooltip = {
				tooltip = REQUIRES_CAPITAL_IN_TRADE_RANGE_TT
				FROM = {
					capital_scope = {
						trade_range = ROOT
					}
				}
			}
		}
		if = {
			limit = {
				FROM = { is_at_war = yes }
			}
			custom_trigger_tooltip = {
				tooltip = FROM_IS_AT_WAR_TT
				FROM = { is_at_war = no }
			}
		}
		if = {
			limit = {
				is_at_war = yes
			}
			custom_trigger_tooltip = {
				tooltip = ROOT_IS_AT_WAR_TT
				is_at_war = no
			}
		}
		if = {
			limit = { FROM = { NOT = { religion = root } } }
			custom_trigger_tooltip = {
				tooltip = FROM_IS_NOT_ROOT_RELIGION_TT
				FROM = { religion = root }
			}
		}
		if = {
			limit = { FROM = { is_great_power = yes } }
			custom_trigger_tooltip = {
				tooltip = FROM_IS_GREAT_POWER_TT
				FROM = { is_great_power = no }
			}
		}
		if = {
			limit = { FROM = { total_development = root } }
			custom_trigger_tooltip = {
				tooltip = FROM_MORE_DEV_THAN_ROOT_TT
				FROM = { NOT = { total_development = root } }
			}
		}
	}
	on_accept = {
		create_subject = {
			subject_type = cultural_sphere_of_influence_subject
			subject = FROM
		}
	}
	on_decline = {
	}

	ai_will_do = { # this is a trigger
		OR = {
			ai_attitude = {
				who = FROM
				attitude = attitude_friendly
			}
			ai_attitude = {
				who = FROM
				attitude = attitude_protective
			}
			FROM = {
				any_neighbor_country = {
					NOT = { tag = ROOT }
					FROM = {
						ai_attitude = {
							who = PREV
							attitude = attitude_threatened
						}
					}
				}
			}
			FROM = {
				ai_attitude = {
					who = ROOT
					attitude = attitude_threatened
				}
			}
		}
		NOT = {
			ai_attitude = {
				who = FROM
				attitude = attitude_domineering
			}
		}
		NOT = {
			ai_attitude = {
				who = FROM
				attitude = attitude_hostile
			}
		}
		NOT = {
			ai_attitude = {
				who = FROM
				attitude = attitude_outraged
			}
		}
		has_opinion = {
			who = FROM
			value = 50
		}
		NOT = {
			FROM = {
				has_country_modifier = just_left_sphere_of_cultural_influence_timer
			}
		}
	}

	ai_acceptance = {
        add_entry = {
            name = DIPLO_OPPINION
			export_to_variable = {
				variable_name = ai_value
				value = opinion
				who = FROM
				with = ROOT
			}
			multiply_variable = {
				which = ai_value 
				value = 0.125
			}
        }
		add_entry = {
			name = AI_TRUST_TOWARDS_ROOT
			export_to_variable = {
				variable_name = ai_value
				value = trust
				who = FROM
				with = ROOT
			}			
			subtract_variable = { 
				which = ai_value
				value = 50
			}
			#1 trust = +4 ai points
			multiply_variable = {
				which = ai_value
				value = 0.4
			}
		}
		add_entry = {
			name = AI_DIPLOMATIC_REPUTATION
			export_to_variable = {
				variable_name = ai_value
				value = trigger_value:diplomatic_reputation
			}
			#1 rep = 3
			multiply_variable = {
				which = ai_value
				value = 3
			}
		}
		add_entry = {
			name = AI_TOTAL_DEVELOPMENT
			export_to_variable = {
				variable_name = ai_value
				value = total_development
				who = FROM
			}
			#4 dev = -1
			multiply_variable = {
				which = ai_value
				value = -0.25
			}
		}
		add_entry = {
			name = DIPLO_HAS_AI_HAS_OWN_SUBJECTS_TT
			limit = {
				FROM = { num_of_subjects = 1 }
			}
			export_to_variable = {
				variable_name = ai_value
				value = 1
			}
			multiply_variable = {
				which = ai_value
				value = -20
			}
		}
		add_entry = {
			name = ADDITIONAL_REASONS_FROM_EVENTS_AND_MISSIONS_TO_ACCEPT_TT
			limit = { FROM = { has_country_flag = easier_to_get_into_persian_sphere } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = 25 }
		}
		add_entry = {
			name = attitude_neutral_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_neutral } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = -10 }
		}
		add_entry = {
			name = attitude_rivalry_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_rivalry } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = -1000 }
		}
		add_entry = {
			name = attitude_hostile_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_hostile } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = -1000 }
		}
		add_entry = {
			name = attitude_friendly_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_friendly } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = 20 }
		}
		add_entry = {
			name = attitude_threatened_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_threatened } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = 20 }
		}
		add_entry = {
			name = attitude_outraged_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_outraged } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = -1000 }
		}
		add_entry = {
			name = attitude_domineering_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_domineering } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = -1000 }
		}
		add_entry = {
			name = DIPLO_BORDER_DISTANCE_TT
			export_to_variable = {
				variable_name = ai_value
				value = border_distance
				who = FROM
				with = ROOT
			}
			#4 units = -1
			multiply_variable = {
				which = ai_value
				value = -0.25
			}
		}
	}
}

remove_them_from_cultural_sphere_of_influece = {
	category = influence
	require_acceptance = no

	is_visible = {
		FROM = {
			is_subject_of = ROOT
			is_subject_of_type = cultural_sphere_of_influence_subject
		}
	}
	is_allowed = {
	}
	on_accept = {
		FROM = {
			grant_independence = yes
			add_country_modifier = {
				name = just_left_sphere_of_cultural_influence_timer
				duration = 3650
				hidden = yes
			}
		}
		reverse_add_opinion = {
			who = from
			modifier = was_removed_from_our_sphere_of_influence
		}
		add_opinion = {
			who = from
			modifier = removed_from_our_sphere_of_influence
		}
		add_truce_with = from
	}
	on_decline = {
	}

	ai_will_do = { # Overlords will never want to break the relationship
		always = no
	}
}

leave_the_cultural_sphere_of_influece = {
	category = influence
	require_acceptance = no

	is_visible = {
		is_subject_of = FROM
		is_subject_of_type = cultural_sphere_of_influence_subject
	}
	is_allowed = {
	}
	on_accept = {
		if = {
			limit = {
				is_subject_of = FROM
				is_subject_of_type = cultural_sphere_of_influence_subject
				NOT = { liberty_desire = 100 }
			}
			if = {
				limit = {
					has_stab_reduction_from_dip_action_modifier = yes
				}
				add_prestige = -1
			}
			else = {
				add_stability = -1
			}
		}
		grant_independence = yes
		reverse_add_opinion = {
			who = from
			modifier = left_our_sphere_of_influence
		}
		add_opinion = {
			who = from
			modifier = left_their_sphere_of_influence
		}
		add_country_modifier = {
			name = just_left_sphere_of_cultural_influence_timer
			duration = 3650
			hidden = yes
		}
	}
	on_decline = {
	}

	ai_will_do = { # Overlords will never want to break the relationship
		is_subject_of = FROM
		OR = {
			liberty_desire = 100
			AND = {
				stability = 1
				liberty_desire = 90
				NOT = {
					has_opinion = {
						who = ROOT
						value = -50
					}
				}
			}
			AND = {
				stability = 1
				liberty_desire = 80
				NOT = {
					has_opinion = {
						who = ROOT
						value = -100
					}
				}
			}
			AND = {
				stability = 1
				liberty_desire = 70
				NOT = {
					has_opinion = {
						who = ROOT
						value = -150
					}
				}
			}
			AND = {
				stability = 1
				liberty_desire = 60
				NOT = {
					has_opinion = {
						who = ROOT
						value = -199
					}
				}
			}
		}
		NOT = {
			any_neighbor_country = {
				ROOT = {
					ai_attitude = {
						who = PREV
						attitude = attitude_threatened
					}
				}
			}
		}
	}
}

join_cultural_sphere_of_influence = {
	category = influence
	require_acceptance = yes

	alert_index = 59
	alert_tooltip = join_cultural_sphere_of_influence_alert_tooltip

	is_visible = {
		FROM = { 
			OR={
				has_active_policy = philosophical_influence
				has_idea = full_leverage
			} 
		}
		is_subject = no
		FROM = { is_subject = no }
	}
	is_allowed = {
		if = {
			limit = {
				NOT = {
					capital_scope = {
						trade_range = FROM
					}
				}
			}
			custom_trigger_tooltip = {
				tooltip = REQUIRES_FROM_TO_BE_IN_TRADE_RANGE_TT
				capital_scope = {
					trade_range = FROM
				}
			}
		}
		if = {
			limit = {
				FROM = { is_at_war = yes }
			}
			custom_trigger_tooltip = {
				tooltip = FROM_IS_AT_WAR_TT
				FROM = { is_at_war = no }
			}
		}
		if = {
			limit = {
				is_at_war = yes
			}
			custom_trigger_tooltip = {
				tooltip = ROOT_IS_AT_WAR_TT
				is_at_war = no
			}
		}
		if = {
			limit = { NOT = { religion = from } }
			custom_trigger_tooltip = {
				tooltip = ROOT_IS_NOT_FROM_RELIGION_TT
				religion = from
			}
		}
		if = {
			limit = { is_great_power = yes }
			custom_trigger_tooltip = {
				tooltip = ROOT_IS_GREAT_POWER_TT
				is_great_power = no
			}
		}
		if = {
			limit = { total_development = from }
			custom_trigger_tooltip = {
				tooltip = ROOT_MORE_DEV_THAN_FROM_TT
				NOT = { total_development = from }
			}
		}
	}
	on_accept = {
		FROM = {
			create_subject = {
				subject_type = cultural_sphere_of_influence_subject
				subject = ROOT
			}
		}
	}
	on_decline = {
	}

	ai_will_do = { # this is a trigger
		OR = {
			ai_attitude = {
				who = FROM
				attitude = attitude_threatened
			}
			any_neighbor_country = {
				NOT = { tag = FROM }
				ROOT = {
					ai_attitude = {
						who = PREV
						attitude = attitude_threatened
					}
				}
			}
			FROM = {
				OR = {
					ai_attitude = {
						who = ROOT
						attitude = attitude_domineering
					}
					ai_attitude = {
						who = ROOT
						attitude = attitude_protective
					}
				}
			}
		}
		NOT = { mil_tech = FROM }
		OR = {
			NOT = { army_size = FROM }
			AND = {
				capital_scope = { is_island = yes }
				NOT = { navy_size = FROM }
			}
			FROM = {
				military_strength = {
					who = ROOT
					value = 2
				}
			}
		}
		NOT = { has_country_modifier = dissolve_protectorate_timer }
		NOT = {
			ai_attitude = {
				who = FROM
				attitude = attitude_rivalry
			}
		}
		NOT = {
			ai_attitude = {
				who = FROM
				attitude = attitude_hostile
			}
		}
		NOT = {
			ai_attitude = {
				who = FROM
				attitude = attitude_outraged
			}
		}
		NOT = {
			ai_attitude = {
				who = FROM
				attitude = attitude_domineering
			}
		}
		is_emperor = no
		is_emperor_of_china = no
	}

	ai_acceptance = {
        add_entry = {
            name = DIPLO_OPPINION
			export_to_variable = {
				variable_name = ai_value
				value = opinion
				who = FROM
				with = ROOT
			}
			multiply_variable = {
				which = ai_value 
				value = 0.125
			}
        }
		add_entry = {
			name = AI_TRUST_TOWARDS_ROOT
			export_to_variable = {
				variable_name = ai_value
				value = trust
				who = FROM
				with = ROOT
			}			
			subtract_variable = { 
				which = ai_value
				value = 50
			}
			#1 trust = +4 ai points
			multiply_variable = {
				which = ai_value
				value = 0.4
			}
		}
		add_entry = {
			name = AI_DIPLOMATIC_REPUTATION
			export_to_variable = {
				variable_name = ai_value
				value = trigger_value:diplomatic_reputation
			}
			#1 rep = 3
			multiply_variable = {
				which = ai_value
				value = 3
			}
		}
		add_entry = {
			name = DIPLO_OUR_TOTAL_DEVELOPMENT_TT
			export_to_variable = {
				variable_name = ai_value
				value = total_development
				who = ROOT
			}
			#10 dev = -1
			multiply_variable = {
				which = ai_value
				value = -0.1
			}
		}
		add_entry = {
			name = attitude_neutral_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_neutral } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = -20 }
		}
		add_entry = {
			name = attitude_rivalry_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_rivalry } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = -1000 }
		}
		add_entry = {
			name = attitude_hostile_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_hostile } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = -1000 }
		}
		add_entry = {
			name = attitude_friendly_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_friendly } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = 50 }
		}
		add_entry = {
			name = attitude_outraged_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_outraged } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = -1000 }
		}
		add_entry = {
			name = attitude_domineering_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_domineering } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = 1000 }
		}
		add_entry = {
			name = attitude_protective_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_protective } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = 1000 }
		}
		add_entry = {
			name = DIPLO_BORDER_DISTANCE_TT
			export_to_variable = {
				variable_name = ai_value
				value = border_distance
				who = FROM
				with = ROOT
			}
			#4 units = -1
			multiply_variable = {
				which = ai_value
				value = -0.25
			}
		}
		add_entry = {
			name = ADDITIONAL_REASONS_FROM_EVENTS_AND_MISSIONS_TO_ACCEPT_TT
			limit = { has_country_flag = easier_to_get_into_persian_sphere }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = 25 }
		}
	}
}
