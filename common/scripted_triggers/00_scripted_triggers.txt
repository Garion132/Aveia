# SOME META SCRIPT EXAMPLES
# This also works for Scripted effects the same. Provided arguments will be pasted in
# wherever the key occurs. If it fails to compile you should get a proper error message
# and the source generated in the error log. There is no added overhead during runtime but
# if used extensivley it might make loading time longer.
#
# my_test_trigger = {
#	OR = {
#		has_country_modifier = $ARG1$_modifier
#		AND = {
#			has_country_modifier = $ARG2$_modifier
#			$CONTEXT$ = {
#				NOT = { has_country_modifier = $ARG1$_modifier }
#			}
#		}
#	}
# }
# Usage:
# my_test_trigger = { ARG1=foo ARG2=bar CONTEXT=FROM }

#GENERAL TRIGGERS
has_mil_advisor = {
	custom_trigger_tooltip = {
		tooltip = has_mil_advisor_tooltip
		OR = {
			advisor = army_organiser
			advisor = army_reformer
			advisor = commandant
			advisor = grand_captain
			advisor = recruitmaster
			advisor = fortification_expert
			advisor = quartermaster
			advisor = army_professor
			advisor = air_captain
			advisor = evader
			advisor = logistics_expert
			advisor = enlistment_officer
		}
	}
}

has_mil_advisor_2 = {
	custom_trigger_tooltip = {
		tooltip = has_mil_advisor_2_tooltip
		OR = {
			army_organiser = 2
			army_reformer = 2
			commandant = 2
			grand_captain = 2
			recruitmaster = 2
			fortification_expert = 2
			quartermaster = 2
			army_professor = 2
			air_captain = 2
			evader = 2
			logistics_expert = 2
			enlistment_officer = 2
		}
	}
}

has_mil_advisor_3 = {
	custom_trigger_tooltip = {
		tooltip = has_mil_advisor_3_tooltip
		OR = {
			army_organiser = 3
			army_reformer = 3
			commandant = 3
			grand_captain = 3
			recruitmaster = 3
			fortification_expert = 3
			quartermaster = 3
			army_professor = 3
			air_captain = 3
			evader = 3
			logistics_expert = 3
			enlistment_officer = 3
		}
	}
}

has_adm_advisor = {
	custom_trigger_tooltip = {
		tooltip = has_adm_advisor_tooltip
		OR = {
			advisor = treasurer
			advisor = philosopher
			advisor = artist
			advisor = theologian
			advisor = master_of_mint
			advisor = inquisitor
			advisor = natural_scientist
			advisor = economist
			advisor = politician
			advisor = industrialist
			advisor = builder
			advisor = bureaucrat
			advisor = developer
		}
	}
}

has_adm_advisor_2 = {
	custom_trigger_tooltip = {
		tooltip = has_adm_advisor_2_tooltip
		OR = {
			treasurer = 2
			philosopher = 2
			artist = 2
			theologian = 2
			master_of_mint = 2
			inquisitor = 2
			natural_scientist = 2
			economist = 2
			politician = 2
			industrialist = 2
			builder = 2
			bureaucrat = 2
			developer = 2
		}
	}
}

has_adm_advisor_3 = {
	custom_trigger_tooltip = {
		tooltip = has_adm_advisor_3_tooltip
		OR = {
			treasurer = 3
			philosopher = 3
			artist = 3
			 theologian = 3
			master_of_mint = 3
			inquisitor = 3
			natural_scientist = 3
			economist = 3
			politician = 3
			industrialist = 3
			builder = 3
			bureaucrat = 3
			developer = 3
		}
	}
}


has_dip_advisor = {
	custom_trigger_tooltip = {
		tooltip = has_dip_advisor_tooltip
		OR = {
			advisor = statesman
			advisor = diplomat
			advisor = naval_reformer
			advisor = trader
			advisor = colonial_governor
			advisor = navigator
			advisor = spymaster
			advisor = navy_professor
			advisor = ship_builder
			advisor = impressment_officer
			advisor = propagandist
			advisor = assimilationist
		}
	}
}

has_dip_advisor_2 = {
	custom_trigger_tooltip = {
		tooltip = has_dip_advisor_2_tooltip
		OR = {
			statesman = 2
			diplomat = 2
			naval_reformer = 2
			trader = 2
			colonial_governor = 2
			navigator = 2
			spymaster = 2
			navy_professor = 2
			ship_builder = 2
			impressment_officer = 2
			propagandist = 2
			assimilationist = 2
		}
	}
}

has_dip_advisor_3 = {
	custom_trigger_tooltip = {
		tooltip = has_dip_advisor_3_tooltip
		OR = {
			statesman = 3
			diplomat = 3
			naval_reformer = 3
			trader = 3
			colonial_governor = 3
			navigator = 3
			spymaster = 3
		}
	}
}


is_subject_other_than_tributary_trigger = { #Ie Tags that cannot conduct independent diplomacy
	custom_trigger_tooltip = {
		tooltip = is_subject_other_than_tributary_trigger_tooltip
		is_subject = yes
		NOT = { is_subject_of_type = tributary_state }
	}
}

is_free_or_tributary_trigger = { #I.e. Tags that can conduct independent diplomacy
	custom_trigger_tooltip = {
		tooltip = is_free_or_tributary_trigger_tooltip
		OR = {
			is_subject = no
			is_subject_of_type = tributary_state
		}
	}
}


# Third Rome Triggers
has_russian_government_interaction = {
	has_dlc = "Third Rome"
	OR = {
		has_reform = tsardom
		has_reform = principality
		has_reform = veche_republic
	}
}


#RIGHTS OF MAN TRIGGERS

#Ruler personality triggers
ruler_has_good_adm_personality = {
	has_dlc = "Rights of Man"
	OR = {
		ruler_has_personality = just_personality
		ruler_has_personality = righteous_personality
		ruler_has_personality = tolerant_personality
		ruler_has_personality = free_thinker_personality
		ruler_has_personality = calm_personality
		ruler_has_personality = zealot_personality
		ruler_has_personality = pious_personality
		ruler_has_personality = lawgiver_personality
		ruler_has_personality = midas_touched_personality
		ruler_has_personality = incorruptible_personality
		ruler_has_personality = architectural_visionary_personality
		ruler_has_personality = scholar_personality
	}
}

ruler_has_good_dip_personality = {
	has_dlc = "Rights of Man" 
	OR = {
		ruler_has_personality = careful_personality
		ruler_has_personality = entrepreneur_personality
		ruler_has_personality = industrious_personality
		ruler_has_personality = expansionist_personality
		ruler_has_personality = navigator_personality
		ruler_has_personality = well_connected_personality
		ruler_has_personality = secretive_personality
		ruler_has_personality = intricate_web_weaver_personality
		ruler_has_personality = benevolent_personality
		ruler_has_personality = charismatic_negotiator_personality
		ruler_has_personality = silver_tongue_personality
	}
}

ruler_has_good_mil_personality = {
	has_dlc = "Rights of Man" 
	OR = {
		ruler_has_personality = bold_fighter_personality
		ruler_has_personality = tactical_genius_personality
		ruler_has_personality = fierce_negotiator_personality
		ruler_has_personality = conqueror_personality
		ruler_has_personality = strict_personality
		ruler_has_personality = inspiring_leader_personality
		ruler_has_personality = martial_educator_personality
		ruler_has_personality = kind_hearted_personality
	}
}

ruler_has_bad_adm_personality = {
	has_dlc = "Rights of Man" 
	OR = {
		ruler_has_personality = embezzler_personality
		ruler_has_personality = sinner_personality
		ruler_has_personality = greedy_personality
		ruler_has_personality = obsessive_perfectionist_personality
	}
}

ruler_has_bad_dip_personality = {
	has_dlc = "Rights of Man" 
	OR = {
		ruler_has_personality = drunkard_personality
		ruler_has_personality = babbling_buffoon_personality
		ruler_has_personality = cruel_personality
		ruler_has_personality = naive_personality
		ruler_has_personality = malevolent_personality
		ruler_has_personality = loose_lips_personality
	}
}

ruler_has_bad_mil_personality = {
	has_dlc = "Rights of Man" 
	#OR = {
	ruler_has_personality = craven_personality
	#}
}

#Heir personality triggers
heir_has_good_adm_personality = {
	has_dlc = "Rights of Man"
	OR = {
		heir_has_personality = just_personality
		heir_has_personality = righteous_personality
		heir_has_personality = tolerant_personality
		heir_has_personality = free_thinker_personality
		heir_has_personality = calm_personality
		heir_has_personality = zealot_personality
		heir_has_personality = pious_personality
		heir_has_personality = lawgiver_personality
		heir_has_personality = midas_touched_personality
		heir_has_personality = incorruptible_personality
		heir_has_personality = architectural_visionary_personality
		heir_has_personality = scholar_personality
	}
}

heir_has_good_dip_personality = {
	has_dlc = "Rights of Man" 
	OR = {
		heir_has_personality = careful_personality
		heir_has_personality = entrepreneur_personality
		heir_has_personality = industrious_personality
		heir_has_personality = expansionist_personality
		heir_has_personality = navigator_personality
		heir_has_personality = well_connected_personality
		heir_has_personality = secretive_personality
		heir_has_personality = intricate_web_weaver_personality
		heir_has_personality = benevolent_personality
		heir_has_personality = charismatic_negotiator_personality
		heir_has_personality = silver_tongue_personality

	}
}

heir_has_good_mil_personality = {
	has_dlc = "Rights of Man" 
	OR = {
		heir_has_personality = bold_fighter_personality
		heir_has_personality = tactical_genius_personality
		heir_has_personality = fierce_negotiator_personality
		heir_has_personality = conqueror_personality
		heir_has_personality = strict_personality
		heir_has_personality = inspiring_leader_personality
		heir_has_personality = martial_educator_personality
		heir_has_personality = kind_hearted_personality
	}
}

heir_has_bad_adm_personality = {
	has_dlc = "Rights of Man" 
	OR = {
		heir_has_personality = embezzler_personality
		heir_has_personality = sinner_personality
		heir_has_personality = greedy_personality
		heir_has_personality = obsessive_perfectionist_personality
	}
}

heir_has_bad_dip_personality = {
	has_dlc = "Rights of Man" 
	OR = {
		heir_has_personality = drunkard_personality
		heir_has_personality = babbling_buffoon_personality
		heir_has_personality = cruel_personality
		heir_has_personality = naive_personality
		heir_has_personality = malevolent_personality
		heir_has_personality = loose_lips_personality
	}
}

heir_has_bad_mil_personality = {
	has_dlc = "Rights of Man" 
	#OR = {
	heir_has_personality = craven_personality
	#}
}

#Queen personality triggers
consort_has_good_adm_personality = {
	has_dlc = "Rights of Man"
	OR = {
		consort_has_personality = just_personality
		consort_has_personality = righteous_personality
		consort_has_personality = tolerant_personality
		consort_has_personality = free_thinker_personality
		consort_has_personality = calm_personality
		consort_has_personality = zealot_personality
		consort_has_personality = pious_personality
		consort_has_personality = lawgiver_personality
		consort_has_personality = midas_touched_personality
		consort_has_personality = incorruptible_personality
		consort_has_personality = architectural_visionary_personality
		consort_has_personality = scholar_personality
	}
}

consort_has_good_dip_personality = {
	has_dlc = "Rights of Man" 
	OR = {
		consort_has_personality = careful_personality
		consort_has_personality = entrepreneur_personality
		consort_has_personality = industrious_personality
		consort_has_personality = expansionist_personality
		consort_has_personality = navigator_personality
		consort_has_personality = well_connected_personality
		consort_has_personality = secretive_personality
		consort_has_personality = intricate_web_weaver_personality
		consort_has_personality = benevolent_personality
		consort_has_personality = charismatic_negotiator_personality
		consort_has_personality = silver_tongue_personality

	}
}

consort_has_good_mil_personality = {
	has_dlc = "Rights of Man" 
	OR = {
		consort_has_personality = bold_fighter_personality
		consort_has_personality = tactical_genius_personality
		consort_has_personality = fierce_negotiator_personality
		consort_has_personality = conqueror_personality
		consort_has_personality = strict_personality
		consort_has_personality = inspiring_leader_personality
		consort_has_personality = martial_educator_personality
		consort_has_personality = kind_hearted_personality
	}
}

consort_has_bad_adm_personality = {
	has_dlc = "Rights of Man" 
	OR = {
		consort_has_personality = embezzler_personality
		consort_has_personality = sinner_personality
		consort_has_personality = greedy_personality
		consort_has_personality = obsessive_perfectionist_personality
	}
}

consort_has_bad_dip_personality = {
	has_dlc = "Rights of Man" 
	OR = {
		consort_has_personality = drunkard_personality
		consort_has_personality = babbling_buffoon_personality
		consort_has_personality = cruel_personality
		consort_has_personality = naive_personality
		consort_has_personality = malevolent_personality
		consort_has_personality = loose_lips_personality
	}
}

consort_has_bad_mil_personality = {
	has_dlc = "Rights of Man" 
	#OR = {
	consort_has_personality = craven_personality
	#}
}
 
can_have_center_of_reformation_trigger = { #Province Scope
	#$RELIGION$ needs to match the religion of the center that is being spawned.
	# OR = {
		# religion = protestant
		# religion = catholic
		# religion = reformed
	# }
	NOT = { province_id = 80 }
	is_in_capital_area = yes
	is_reformation_center = no
	is_island = no
	expelling_minorities = no
	development = 10
	NOT = {
		any_neighbor_province = {
			is_reformation_center = yes
		}
	}
	NOT = {
		any_province = {
			area = PREV
			is_reformation_center = yes
			religion = $RELIGION$
		}
	}
	NOT = { has_climate = arctic }
	NOT = { has_climate = arid }
	NOT = { has_terrain = coastline }
	NOT = { has_terrain = coastal_desert }
	NOT = { has_terrain = steppe }
	NOT = { has_terrain = desert }
	NOT = { has_terrain = glacier }
	NOT = { has_climate = tropical }
}

province_viable_for_industrialization_events_trigger = { #Province Scope
	is_state = yes
	NOT = { devastation = 1 }
	OR = {
		is_in_capital_area = yes
		continent = CAPITAL
	}
	enlightenment = 100
}

unindustrialized_province_trigger = { #Province Scope
	#NOT = { has_province_flag = canals_and_turnpikes_flag }
	#NOT = { has_province_flag = agricultural_revolution_province }
	NOT = { has_province_flag = had_economic_urbanization }
	NOT = { has_province_flag = swapped_to_cloth }
	NOT = { has_province_flag = swapped_to_paper }
	NOT = { has_province_flag = swapped_to_glass }
	NOT = { has_province_flag = industrial_urbanization }
	NOT = { has_province_flag = metalwork_center }
	NOT = { has_province_flag = textile_center }
	NOT = { has_province_flag = shipyards_of_x }
}

industrialized_province_trigger = { #Province Scope
	OR = {
		#has_province_flag = canals_and_turnpikes_flag
		#has_province_flag = agricultural_revolution_province
		has_province_flag = had_economic_urbanization 
		has_province_flag = swapped_to_cloth
		has_province_flag = swapped_to_paper
		has_province_flag = swapped_to_glass
		has_province_flag = industrial_urbanization
		has_province_flag = metalwork_center
		has_province_flag = textile_center
		has_province_flag = shipyards_of_x
	}
}

was_never_end_game_tag_trigger = {	#Country Scope
	OR = {
		NOT = { end_game_tags_blocked = yes }
	}
}


was_never_german_regional_tag_trigger = {	#Country Scope
	always = yes
}
has_manufactory_trigger = { #Province Scope
	custom_trigger_tooltip = {
		tooltip = has_manufactory_trigger_tooltip
		OR = {
			has_building = irrigated_fields
			has_building = farm
			has_building = mechanized_farm
			
			has_building = gatherers_hut
			has_building = plantation
			has_building = trade_station
			
			has_building = craftsman
			has_building = early_factory
			has_building = late_factory
			
			has_building = mine
			has_building = mining_complex
			has_building = mechanized_mine
			
			has_building = refinery
			has_building = processing_plant
		}
	}
}

#Use this one if you want it to say which manufactory has to be built
# Does not include 1.30 manufactories
has_manufactory_no_custom_tooltip_trigger = { #Province Scope
	if = {
		limit = {
			OR = {
				trade_goods = naval_supplies
				trade_goods = fish
				trade_goods = salt
			}
		}
		has_building = wharf
	}
	else_if = {
		limit = {
			OR = {
				trade_goods = copper
				trade_goods = iron
			}
		}
		has_building = weapons
	}
	else_if = {
		limit = {
			OR = {
				trade_goods = wool
				trade_goods = cloth
				trade_goods = silk
				trade_goods = dyes
			}
		}
		has_building = textile
	}
	else_if = {
		limit = {
			OR = {
				trade_goods = ivory
				trade_goods = slaves
				trade_goods = spices
				trade_goods = fur
				trade_goods = incense
			}
		}
		has_building = tradecompany
	}
	else_if = {
		limit = {
			OR = {
				trade_goods = grain
				trade_goods = livestock
				trade_goods = wine
			}
		}
		has_building = farm_estate
	}
	else_if = {
		limit = {
			OR = {
				trade_goods = paper
				trade_goods = gems
				trade_goods = tropical_wood
				trade_goods = glass
				trade_goods = chinaware
			}
		}
		has_building = mills
	}
	else_if = {
		limit = {
			trade_goods = coal
		}
		has_building = furnace
	}
	else = {
		has_building = plantations
	}
}

has_no_manufactory_trigger = { #Province Scope
	NOT = { has_building = wharf }
	NOT = { has_building = weapons }
	NOT = { has_building = textile }
	NOT = { has_building = tradecompany }
	NOT = { has_building = farm_estate }
	NOT = { has_building = mills }
	NOT = { has_building = plantations }
	NOT = { has_building = furnace }
	NOT = { has_building = ramparts }
	NOT = { has_building = soldier_households }
	NOT = { has_building = impressment_offices }
	NOT = { has_building = state_house }
}

# Does not include new manufactories - they don't fit for the purposes of this trigger
root_can_build_manufactory_here_trigger = {
    has_no_manufactory_trigger = yes
    num_free_building_slots = 1
    if = {
        limit = {
            OR = {
                trade_goods = naval_supplies
                trade_goods = fish
                trade_goods = salt
            }
        }
        ROOT = { dip_tech = 11 }
    }
    else_if = {
        limit = {
            OR = {
                trade_goods = copper
                trade_goods = iron
            }
        }
        ROOT = { mil_tech = 11 }
    }
    else_if = {
        limit = {
            OR = {
                trade_goods = wool
                trade_goods = cloth
                trade_goods = silk
                trade_goods = dyes
            }
        }
        ROOT = { adm_tech = 11 }
    }
    else_if = {
        limit = {
            OR = {
                trade_goods = coffee
                trade_goods = cotton
                trade_goods = sugar
                trade_goods = tobacco
                trade_goods = tea
                trade_goods = cocoa
            }
        }
        ROOT = { adm_tech = 14 }
    }
    else_if = {
        limit = {
            OR = {
                trade_goods = ivory
                trade_goods = slaves
                trade_goods = spices
                trade_goods = fur
                trade_goods = incense
            }
        }
        ROOT = { dip_tech = 14 }
    }
    else_if = {
        limit = {
            OR = {
                trade_goods = grain
                trade_goods = livestock
                trade_goods = wine
            }
        }
        ROOT = { adm_tech = 6 }
    }
    else_if = {
        limit = {
            OR = {
                trade_goods = paper
                trade_goods = gems
                trade_goods = tropical_wood
                trade_goods = glass
                trade_goods = chinaware
            }
        }
        ROOT = { adm_tech = 16 }
    }
    else_if = {
        limit = {
            trade_goods = coal
        }
        ROOT = { adm_tech = 21 }
    }
}

has_nobles_trade_good_trigger = {
	OR = {
		trade_goods = copper
		trade_goods = iron
		trade_goods = livestock
		trade_goods = grain
		trade_goods = gems
		AND = {
			trade_goods = slaves
			ROOT = { NOT = { religion = nahuatl } }
		}
	}
}

has_burghers_trade_good_trigger = {
	OR = {
		trade_goods = naval_supplies
		trade_goods = salt
		trade_goods = coffee
		trade_goods = cotton
		trade_goods = sugar
		trade_goods = tobacco
		trade_goods = tea
		trade_goods = cocoa
		trade_goods = cloth
		trade_goods = silk
		trade_goods = dyes
		trade_goods = coal
		trade_goods = spices
		trade_goods = tropical_wood
		trade_goods = glass
		trade_goods = chinaware
		trade_goods = paper
		trade_goods = ivory
		AND = {
			trade_goods = fish
			ROOT = { NOT = { religion_group = christian } }
		}
	}
}

has_church_trade_good_trigger = {
	OR = {
		trade_goods = wool
		trade_goods = fur
		trade_goods = incense
	}
}

has_dharma_elephants_trigger = {
	OR = {
		has_dlc = "Dharma"
		has_dlc = "Dharma - Indian Sultanate Pack"
		has_dlc = "Dharma - Hindu Unit Pack"
	}
	always = no
}

# This is for when we want to award government reform progress and need to check if that's useful to the player based on dlc ownership
has_completed_all_reforms_trigger = {
	custom_trigger_tooltip = {
		tooltip = has_completed_all_reforms_trigger_tooltip
		NOT = { has_dlc = "Emperor" }
		OR = {
			has_reform = political_absolutism_reform
			has_reform = legislative_houses_reform
			has_reform = strengthen_executive_powers_reform
			has_reform = reinforce_republican_values_reform
			has_reform = enlightened_monarchy_reform
			has_reform = emperor_of_the_revolution_reform
			has_reform = government_for_people_reform
			has_reform = president_for_life_reform
			has_reform = proclaim_religious_head_reform
			has_reform = priestly_autonomy_reform
			has_reform = many_fingers_of_god_reform
			has_reform = religious_permanent_revolution_reform
			has_reform = religion_in_one_country_reform
		}
	}
}

# This is for all other situations
has_final_tier_reforms_trigger = {
	custom_trigger_tooltip = {
		tooltip = has_completed_all_reforms_trigger_tooltip
		OR = {
			has_reform = political_absolutism_reform
			has_reform = legislative_houses_reform
			has_reform = strengthen_executive_powers_reform
			has_reform = reinforce_republican_values_reform
			has_reform = enlightened_monarchy_reform
			has_reform = emperor_of_the_revolution_reform
			has_reform = government_for_people_reform
			has_reform = president_for_life_reform
			has_reform = all_under_tengri_reform
			has_reform = proclaim_religious_head_reform
			has_reform = priestly_autonomy_reform
			has_reform = many_fingers_of_god_reform
			has_reform = religious_permanent_revolution_reform
			has_reform = religion_in_one_country_reform
		}
	}
}

has_holy_order_trigger = {
	custom_trigger_tooltip = {
		tooltip = "has_holy_order_trigger_tooltip"
		# OR = {
			# holy_order = jesuit_order
			# holy_order = dominican_order
			# holy_order = franciscan_order
			# holy_order = shadhili_order
			# holy_order = qadiri_order
			# holy_order = aissawa_order
		# }
		always = no
	}
}

same_govt_as_root_trigger = {
	custom_trigger_tooltip = {
		tooltip = same_govt_as_root_tt
		OR = {
			AND = {
				government = theocracy
				root = {
					government = theocracy
				}
			}
			AND = {
				government = monarchy
				root = {
					government = monarchy
				}
			}
			AND = {
				government = republic
				root = {
					government = republic
				}
			}
			AND = {
				government = dictatorship
				root = {
					government = dictatorship
				}
			}
			AND = {
				government = tribal
				root = {
					government = tribal
				}
			}
			AND = {
				government = native
				root = {
					government = native
				}
			}
		}
	}
}

# Building triggers

has_religious_building_trigger = {
	OR = {
		has_building = temple
		has_building = temple
		has_building = cathedral
	}
}

has_tax_building_trigger = {
	OR = {
		has_building = taxman
		has_building = tax_office
		has_building = tax_agency
		has_building = revenue_department
	}
}

has_trade_building_trigger = {
	OR = {
		has_building = marketplace
		has_building = trade_depot
		has_building = merchants_quarter
		has_building = customs_house
	}
}

has_finance_building_trigger = {
	OR = {
		has_building = mint
		has_building = bank
		has_building = stock_exchange
	}
}

has_production_building_trigger = {
	OR = {
		has_building = workshop
		has_building = artisans_guild
		has_building = craftsmans_district
		has_building = industrial_zone
	}
}

has_manpower_building_trigger = {
	OR = {
		has_building = barracks
		has_building = training_fields
		has_building = military_academy
	}
}

has_shipyard_building_trigger = {
	OR = {
		has_building = shipwright
		has_building = drydock
		has_building = naval_arsenal
		has_building = naval_base
	}
}

has_dock_building_trigger = {
	OR = {
		has_building = port
		has_building = dockland
		has_building = wharf
		has_building = harbor_district
	}
}

has_forcelimit_building_trigger = {
	OR = {
		has_building = regimental_camp
		has_building = conscription_center
		has_building = mobilization_system
	}
}

has_courthouse_building_trigger = {
	OR = {	
		has_building = town_square
		has_building = courthouse
		has_building = town_hall
		has_building = post_office
		has_building = city_hall
	}
}

has_airship_building_trigger = {
	OR = {	
		has_building = airdock
		has_building = airship_maintenance_bay
		has_building = airship_terminal
	}
}

has_alchemy_building_trigger = {
	OR = {	
		has_building = alchemist_shop
		has_building = transfumatory
	}
}

has_fort_building_trigger = {
	OR = {	
		has_building = fort_14th
		has_building = fort_15th
		has_building = fort_16th
		has_building = fort_17th
		has_building = fort_18th
		has_building = fort_19th
	}
}

has_coastal_building_trigger = {
	OR = {	
		has_building = coastal_defence
		has_building = naval_battery
		has_building = naval_fortification
	}
}

has_road_building_trigger = {
	OR = {	
		has_building = gravel_roads
		has_building = paved_roads
		has_building = highways
	}
}

has_rail_building_trigger = {
	OR = {	
		has_building = canals
		has_building = railroads
		has_building = railroad_network
	}
}

has_education_building_trigger = {
	OR = {	
		has_building = school
		has_building = university
		has_building = research_center
	}
}

has_been_insulted_by_root = {
	custom_trigger_tooltip = {
		tooltip = has_been_insulted_by_root
		OR = {
			has_opinion_modifier = {
				who = ROOT
				modifier = insulted
			}
			has_opinion_modifier = {
				who = ROOT
				modifier = scornfully_insulted
			}
		}
	}
}

valid_for_personal_unions_trigger = {
	is_subject = no
	government = monarchy
	religion_group = christian
}

is_shadow_kingdom_eligible_trigger = {
	always = no
}

will_leave_for_shadow_kingdom_trigger = {
	always = no
}

is_germanic_but_not_swamp = {
}
is_germanic_but_not_mountains = {
}
#province scope; checks it is highest or joint highest supply limit in the area owned by you (useful for spawning rebels)
highest_supply_limit_in_area = {
	NOT = {
		area_for_scope_province = { 
			NOT = { province_id = prev }
			owned_by = root
			supply_limit = prev 
			NOT = { prev = { supply_limit = prev } }
		}
	}
}

# Has current fort level
province_has_current_tech_fort_trigger = {
	custom_trigger_tooltip = {
		tooltip = province_has_current_tech_fort_trigger_tt
		if = {
			limit = {
				owner = {
					NOT = { mil_tech = 12 }
				}12
			}
			has_building = fort_14th
		}
		else_if = {
			limit = {
				owner = {
					AND = {
						mil_tech = 12
						NOT = { mil_tech = 24 }
					}
				}
			}
			has_building = fort_15th
		}
		else_if = {
			limit = {
				owner = {
					AND = {
						mil_tech = 24
						NOT = { mil_tech = 34 }
					}
				}
			}
			has_building = fort_16th
		}
		else_if = {
			limit = {
				owner = {
					AND = {
						mil_tech = 34
						NOT = { mil_tech = 41 }
					}
				}
			}
			has_building = fort_17th
		}
		else_if = {
			limit = {
				owner = {
					AND = {
						mil_tech = 41
						NOT = { mil_tech = 46 }
					}
				}
			}
			has_building = fort_18th
		}
		else_if = {
			limit = {
				owner = {
					mil_tech = 46
				}
			}
			has_building = fort_19th
		}
	}
}



check_reducing_estate_revolt_size_trigger = {
	if = {
		limit = {
			NOT = { num_of_cities = 8 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 2
				has_province_flag = $FLAG$
			}
		}
	}
	else_if = {
		limit = {
			NOT = { num_of_cities = 12 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 3
				has_province_flag = $FLAG$
			}
		}
	}
	else_if = {
		limit = {
			NOT = { num_of_cities = 18 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 4
				has_province_flag = $FLAG$
			}
		}
	}
	else_if = {
		limit = {
			NOT = { num_of_cities = 28 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 5
				has_province_flag = $FLAG$
			}
		}
	}
	else_if = {
		limit = {
			NOT = { num_of_cities = 40 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 6
				has_province_flag = $FLAG$
			}
		}
	}
	else_if = {
		limit = {
			NOT = { num_of_cities = 50 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 7
				has_province_flag = $FLAG$
			}
		}
	}
	else = {
		NOT = {
			num_of_owned_provinces_with = {
				value = 8
				has_province_flag = $FLAG$
			}
		}
	}
}

check_reducing_estate_revolt_size_more_trigger = {
	if = {
		limit = {
			NOT = { num_of_cities = 10 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 2
				has_province_flag = $FLAG$
			}
		}
	}
	else_if = {
		limit = {
			NOT = { num_of_cities = 16 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 3
				has_province_flag = $FLAG$
			}
		}
	}
	else_if = {
		limit = {
			NOT = { num_of_cities = 24 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 4
				has_province_flag = $FLAG$
			}
		}
	}
	else_if = {
		limit = {
			NOT = { num_of_cities = 36 }
		}
		NOT = {
			num_of_owned_provinces_with = {
				value = 5
				has_province_flag = $FLAG$
			}
		}
	}
	else = {
		NOT = {
			num_of_owned_provinces_with = {
				value = 6
				has_province_flag = $FLAG$
			}
		}
	}
}

is_revolutionary_republic_trigger = {
	OR = {
		has_reform = revolutionary_republic_reform
		has_reform = junior_revolutionary_republic_reform
	}
}

revolution_event_can_happen_trigger = {
	OR = {
		revolution_target_exists = no
		has_dlc = "Emperor"
	}
	OR = {
		capital_scope = { 
#			continent = europe 
			controlled_by = REB
		}
		has_country_modifier = just_lost_to_revolutionary_rebels
		has_country_flag = revolution_disaster_immediate_revolution
	}
	num_of_cities = 10
	is_revolutionary = no
}
#country scope, used in election events to check whether generated rulers may be female
republic_with_female_rulers_trigger = {
	OR = {
		has_country_modifier = sister_suffragettes
		has_country_modifier = mary_inheritance_reforms
	}
}

is_absolutism_active = {
	OR = {
		current_age = age_of_rosen_dawn
		current_age = age_of_strife
		current_age = age_of_progress
	}
}


#Country scope
is_or_was_tag = {
	OR = {
		tag = $tag$
		was_tag = $tag$
	}
}

has_any_colonist_idea = {
	OR = {
		has_idea = colonial_ventures
		has_idea = additional_colonists
		has_idea = general_colonization_law
		has_idea = pioneer_spirit
		has_idea = manifest_destiny
		has_idea = settling_the_interior
		has_idea = cab_carib_seafaring
		has_idea = lon_conquistadores
		has_idea = nzh_expand_to_the_east
		has_idea = hdr_distant_diplomacy	#Colonist is in the ambition
		has_idea = AUS_outback_stations
		has_idea = NZL_pokarekare_ana	#Colonist is in the ambition
		has_idea = WSI_Colonial_Legacy	#Colonist is in the ambition
		has_idea = asu_colonialism
		has_idea = adu_expeditionary_sentiment
		has_idea = ICE_nationalism	#Colonist is in the ambition
		has_idea = maj_nusa_tenggara
	}
}

has_completed_idea_group_of_category = {
	[[adm_ideas]
		custom_trigger_tooltip = {
			tooltip = has_completed_one_adm_idea_group
			OR = {
				full_idea_group = administrative_ideas
				full_idea_group = philosophical_ideas
				full_idea_group = engineering_ideas
				full_idea_group = religious_ideas
				full_idea_group = bureaucratic_ideas
				full_idea_group = humanist_ideas
				full_idea_group = innovativeness_ideas
				full_idea_group = economic_ideas
				full_idea_group = expansion_ideas
				full_idea_group = industrial_ideas
				full_idea_group = magical_ideas
				full_idea_group = capitalist_ideas
			}
		}
	]
	[[dip_ideas]
		custom_trigger_tooltip = {
			tooltip = has_completed_one_dip_idea_group
			OR = {
				full_idea_group = trade_ideaseas
				full_idea_group = colonialism_ideas
				full_idea_group = maritime_ideas
				full_idea_group = diplomatic_ideas
				full_idea_group = influence_ideas
				full_idea_group = spy_ideas
				full_idea_group = exploration_ideas
				full_idea_group = business_ideas
				full_idea_group = propaganda_ideas
				full_idea_group = imperialist_ideas
				full_idea_group = nationalist_ideas
				full_idea_group = geopolitical_ideas
			}
		}
	]
	[[mil_ideas]
		custom_trigger_tooltip = {
			tooltip = has_completed_one_mil_idea_group
			OR = {
				full_idea_group = offensive_ideas
				full_idea_group = defensive_ideas
				full_idea_group = leadership_ideas
				full_idea_group = logistic_ideas
				full_idea_group = aristocracy_ideas
				full_idea_group = plutocracy_ideas
				full_idea_group = quality_ideas
				full_idea_group = quantity_ideas
				full_idea_group = mercenary_ideas
				full_idea_group = naval_ideas
				full_idea_group = combined_arms_ideas
				full_idea_group = mass_production_ideas
				full_idea_group = procurement_ideas
			}
		}
	]
}

num_of_completed_idea_groups_adm = {
	calc_true_if = {
		desc = num_of_completed_idea_groups_adm_tt
		full_idea_group = administrative_ideas
		full_idea_group = philosophical_ideas
		full_idea_group = engineering_ideas
		full_idea_group = religious_ideas
		full_idea_group = bureaucratic_ideas
		full_idea_group = humanist_ideas
		full_idea_group = innovativeness_ideas
		full_idea_group = economic_ideas
		full_idea_group = expansion_ideas
		full_idea_group = industrial_ideas
		full_idea_group = magical_ideas
		full_idea_group = capitalist_ideas
		amount = $amount$
	}
}

num_of_completed_idea_groups_dip = {
	calc_true_if = {
		desc = num_of_completed_idea_groups_dip_tt
		full_idea_group = trade_ideaseas
		full_idea_group = colonialism_ideas
		full_idea_group = maritime_ideas
		full_idea_group = diplomatic_ideas
		full_idea_group = influence_ideas
		full_idea_group = spy_ideas
		full_idea_group = exploration_ideas
		full_idea_group = business_ideas
		full_idea_group = propaganda_ideas
		full_idea_group = imperialist_ideas
		full_idea_group = nationalist_ideas
		full_idea_group = geopolitical_ideas
		amount = $amount$
	}
}

num_of_completed_idea_groups_mil = {
	calc_true_if = {
		desc = num_of_completed_idea_groups_mil_tt
		full_idea_group = offensive_ideas
		full_idea_group = defensive_ideas
		full_idea_group = leadership_ideas
		full_idea_group = logistic_ideas
		full_idea_group = aristocracy_ideas
		full_idea_group = plutocracy_ideas
		full_idea_group = quality_ideas
		full_idea_group = quantity_ideas
		full_idea_group = mercenary_ideas
		full_idea_group = naval_ideas
		full_idea_group = combined_arms_ideas
		full_idea_group = mass_production_ideas
		full_idea_group = procurement_ideas
		amount = $amount$
	}
}

num_of_completed_idea_groups_by_category = {
	num_of_completed_idea_groups_$type$ = { amount = $amount$ }
}


mal_will_accept_offer = {
	$province$ = {
		owner = {
			OR = {
				alliance_with = ROOT
				is_subject_of = ROOT
				has_opinion = {
					who = ROOT
					value = 100
				}
			}
		}
	}
}

mal_very_highly_to_accept_offer = {
	$province$ = {
		owner = {
			has_opinion = {
				who = ROOT
				value = 50
			}
		}
	}
}

mal_might_or_might_not_accept_offer = {
	$province$ = {
		owner = {
			has_opinion = {
				who = ROOT
				value = -50
			}
			NOT = {
				has_opinion = {
					who = ROOT
					value = 50
				}
			}
		}
	}
}

mal_very_likely_to_not_accept_offer = {
	$province$ = {
		owner = {
			NOT = {
				has_opinion = {
					who = ROOT
					value = 50
				}
			}
		}
	}
}

mal_will_never_accept_offer = {
	$province$ = {
		owner = {
			OR = {
				is_rival = ROOT
				is_enemy = ROOT
				NOT = {
					has_opinion = {
						who = ROOT
						value = 100
					}
				}
			}
		}
	}
}

province_is_or_accepts_culture = {
	OR = {
		has_owner_culture = yes
		has_owner_accepted_culture = yes
	}
}

province_is_or_accepts_religion_group = { 
	custom_trigger_tooltip = {
		tooltip = province_is_or_accepts_$religion_group$_tt
		OR = {
			AND = {
				religion_group = $religion_group$
				has_owner_religion = yes
			}
			AND = {
				owner = { secondary_religion_group = $religion_group$ }
				OR = {
					religion_group = $religion_group$
					has_owner_religion = yes
				}
			}
		}
	}
}

province_is_or_accepts_religion = {
	custom_trigger_tooltip = {
		tooltip = province_is_or_accepts_$religion$_tt
		OR = {
			AND = {
				religion = $religion$
				has_owner_religion = yes
			}
			AND = {
				owner = { secondary_religion = $religion$ }
				OR = {
					religion = $religion$
					has_owner_religion = yes
				}
			}
		}
	}
}

#Province scope, used to tell if a province can be built in
no_construction = {
	custom_trigger_tooltip = {
		tooltip = no_building_construction_tt #This includes armies and such
		NOT = { has_construction = building }
		NOT = { has_construction = great_project }
		NOT = { has_construction = canal }
		NOT = { has_construction = culture }
		NOT = { has_construction = missionary }
	}
	NOT = { has_construction = army } #For clarity
	NOT = { has_construction = navy } #For clarity	
}

has_points_for_livonian_military_monarchy = {
	check_variable = {
		which = liv_mil
		value = 5
	}
}
has_points_for_livonian_naval_monarchy = {
	check_variable = {
		which = liv_dip
		value = 5
	}
}
has_points_for_livonian_trade_monarchy = {
	check_variable = {
		which = liv_adm
		value = 3
	}
	check_variable = {
		which = liv_dip
		value = 3
	}
}
has_points_for_livonian_constitutional_monarchy = {
	is_variable_equal = {
		which = liv_adm
		value = 3
	}
}
has_points_for_livonian_theocratic_monarchy = {
	check_variable = {
		which = liv_adm
		value = 3
	}
	check_variable = {
		which = liv_mil
		value = 3
	}
}
has_points_for_livonian_elective_monarchy = {
	check_variable = {
		which = liv_dip
		value = 3
	}
}
has_points_for_livonian_diplomatic_monarchy = {
	check_variable = {
		which = liv_dip
		value = 4
	}
}
has_points_for_livonian_administrative_monarchy = {
	check_variable = {
		which = liv_adm
		value = 5
	}
}
has_points_for_livonian_mercenary_monarchy = {
	check_variable = {
		which = liv_mil
		value = 3
	}
}
has_points_for_livonian_admiral_monarchy = {
	check_variable = {
		which = liv_dip
		value = 4
	}
}
has_points_for_livonian_naval_controlled_monarchy = {
	check_variable = {
		which = liv_dip
		value = 3
	}
	check_variable = {
		which = liv_mil
		value = 3
	}
}
has_points_for_livonian_general_controlled_monarchy = {
	check_variable = {
		which = liv_mil
		value = 4
	}
}
has_points_for_livonian_absolute_monarchy = {
	check_variable = {
		which = liv_adm
		value = 4
	}
}
has_points_for_livonian_enlightened_monarchy = {
	is_variable_equal = {
		which = liv_adm
		value = 2
	}
	is_variable_equal = {
		which = liv_dip
		value = 2
	}
	is_variable_equal = {
		which = liv_mil
		value = 2
	}
}

has_points_for_livonian_monarchy = {
	has_points_for_$government_reform$ = yes
}

#Tooltip example: "Has passed at least §Y6§! issues in the parliament (§Y[Root.GetNumOfIssuesPassed]§!/§Y6§!)."
num_of_issues_passed = {
	if = {
		limit = {
			has_dlc = "Common Sense"
		}
		custom_trigger_tooltip = {
			tooltip = $tooltip$
			check_variable = {
				which = issues_passed
				value = $value$
			}
		}
	}
}

is_allowed_to_recruit_mercenaries = {
	custom_trigger_tooltip = {
		tooltip = is_allowed_to_recruit_mercenaries_tt
		NOT = { has_country_modifier = dan_sca_refocus_on_personal_armies }
	}
}

is_not_free_merc_company = {
	ROOT = {
		NOT = { mercenary_company = merc_bridge_guard }
		NOT = { mercenary_company = merc_kethai_house_levy }
		NOT = { mercenary_company = merc_etailia_house_levy }
		NOT = { mercenary_company = merc_nyleymi_house_levy }
		NOT = { mercenary_company = merc_draumi_house_levy }
		NOT = { mercenary_company = merc_lidori_house_levy }
		NOT = { mercenary_company = merc_celola_house_levy }
	}
}

halved_parliament_bribes = {
	OR = {
		has_country_flag = halved_parliament_bribe_costs
		has_government_attribute = halved_parliament_bribes
	}
}